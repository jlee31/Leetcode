class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        L = 0
        N = len(nums)
        R = N - 1
        while L <= R:
            M = L + ((R-L) // 2)
            if nums[M] == target:
                return M
            elif target < nums[M]:
                R = M - 1
            else:
                L = M + 1
        return -1

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        def binary_search(l, r):
            if l > r:
                return -1
            mid = l + (r - l) // 2
            if nums[mid] == target:
                return mid
            elif nums[mid] > target:                    
                return binary_search(l, mid - 1)
            else:
                return binary_search(mid + 1, r)
        return binary_search(0, len(nums) - 1)
