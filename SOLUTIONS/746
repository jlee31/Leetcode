class Solution(object):
    def minCostClimbingStairs(self, cost):
        """
        :type cost: List[int]
        :rtype: int
        """
        # Top Down
        '''
        n = len(cost)
        memo = {0:0, 1:0}
        def minCost(i):
            if i in memo:
                return memo[i]
            else:
                memo[i] = min(cost[i - 2] + minCost(i - 2),
                              cost[i - 1] + minCost(i - 1))
                return memo[i]
        return minCost(n)        
        '''
        # Bottom Up
        n = len(cost)
        dp = [0] * (n + 1)
        for i in range(2, n+1):
            dp[i] = min(cost[i - 2] + dp[i - 2], cost[i - 1] + dp[i - 1])
        return dp[i]
        
        # both o(n)

