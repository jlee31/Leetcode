# Brute Force
class Solution(object):
    def smallerNumbersThanCurrent(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        nums2 = []
        for i in nums:
            nums2.append(i)
        l = len(nums)
        lst = []
        for i in range(l):
            val = 0
            for j in range(l):
                if nums[i] > nums[j]:
                    val += 1
            lst.append(val)
            print(val)
            firstval = nums2.pop(0)
            nums2.append(firstval)
            
        return lst

O(n2) solution 

class Solution(object):
    def smallerNumbersThanCurrent(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        nums2 = sorted(nums)
        res = []
        l = len(nums)
        for num in nums:
            res.append(nums2.index(num))
        return res

O(nlogn)
class Solution(object):
    def smallerNumbersThanCurrent(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        nums2 = sorted(nums)
        rank = {}
        for index, num in enumerate(nums2):
            if num not in rank:
                rank[num] = index
        res = []
        for num in nums:
            res.append(rank[num])
        return res
