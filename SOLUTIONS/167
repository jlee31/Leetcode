class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        answer = [0,0]
        n = len(numbers)

        hmap = {}
        for i in range(n):
            hmap[numbers[i]] = i

        for i in range(n):
            off = target - numbers[i]
            if off in hmap and hmap[off] != i:  # Ensure not the same index
                answer[0] = i + 1
                answer[1] = hmap[off] + 1
                break

        return answer

class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        n = len(numbers)
        low = 0
        high = n - 1
        answer = [0,0]
        while low < high:
            if numbers[low] + numbers[high] > target:
                high -= 1
            elif numbers[low] + numbers[high] == target:
                answer[0] = low + 1
                answer[1] = high + 1
                break
            else:
                low += 1
        return answer
            
